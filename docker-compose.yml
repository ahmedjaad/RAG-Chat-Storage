version: '3.8'
services:
  redis:
    container_name: rag-redis
    image: redis:7.2
    restart: unless-stopped
    ports:
      - "6379:6379"
  mysql:
    container_name: rag-mysql
    image: mysql:8.3
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secret}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-rag_chat_storage}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-p${MYSQL_ROOT_PASSWORD:-secret}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  adminer:
    container_name: rag-adminer
    image: adminer:latest
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8082:8080"

  app:
    container_name: rag-app
    build:
      context: .
    depends_on:
      - mysql
      - redis
      - logstash
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-ui-embedded,openai,prod}
    ports:
      - "8080:8080"
      - "8000:8000"

  ollama:
    image: ollama/ollama:latest
    container_name: rag-ollama
    profiles: ["ollama"]           # only runs when docker-compose --profile ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: rag-elasticsearch
    profiles: ["elk"]           # only runs when docker-compose --profile elk
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false

    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.1
    container_name: rag-logstash
    profiles: ["elk"]           # only runs when docker-compose --profile elk
    depends_on:
      - elasticsearch
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5050:5050"  # TCP input for Spring Boot JSON logs

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: rag-kibana
    profiles: ["elk"]           # only runs when docker-compose --profile elk
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: "http://rag-elasticsearch:9200"

volumes:
  mysql_data:
  ollama_data:
  es_data: